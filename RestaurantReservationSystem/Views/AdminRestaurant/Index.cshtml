@model IEnumerable<RestaurantReservationSystem.Models.Restaurant>
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@{
    ViewData["Title"] = "Restaurants";
}
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
<h2>Restaurant List</h2>

<p>
    <a class="btn btn-primary" href="@Url.Action("Create")">Create New Restaurant</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>Logo</th>
            <th>Name</th>
            <th>Address</th>
            <th>Cuisine Type</th>
            <th>Price Range</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var restaurant in Model)
        {
            <tr>
                <td>
                    <img src="@restaurant.LogoUrl" alt="Logo" style="width: 100px; height: auto;" />
                </td>
                    <td>@Html.DisplayFor(modelItem => restaurant.Name)</td>
                    <td>@Html.DisplayFor(modelItem => restaurant.Address)</td>
                    <td>@Html.DisplayFor(modelItem => restaurant.CuisineType)</td>
                    <td>@Html.DisplayFor(modelItem => restaurant.PriceRange)</td>
                <td>
                    <a class="btn btn-info" href="@Url.Action("Details","AdminRestaurant", new { id = restaurant.RestaurantId })">Details</a>
                    <a class="btn btn-warning" href="@Url.Action("Edit", "AdminRestaurant", new { id = restaurant.RestaurantId })">Edit</a>
                    <form action="@Url.Action("Delete", new { id = restaurant.RestaurantId })" method="post" style="display:inline;" onsubmit="this.querySelector('button').disabled = true;">
                        @Html.AntiForgeryToken()  <!-- 防止跨站请求伪造 -->
                        <button type="submit" class="btn btn-danger">Delete</button>
                    </form>
                </td>
            </tr>          
        }
    </tbody>
</table>
@section Scripts {
<script>
    function confirmDelete(restaurantId) {
        if (confirm("Are you sure you want to delete this restaurant?")) {
            fetch(`/AdminRestaurant/Delete/${restaurantId}`, {
                method: "POST",
                headers: { "Content-Type": "application/json" },
            })
            .then(response => {
                if (response.ok) {
                    alert("Restaurant deleted successfully.");
                    window.location.reload(); // reload
                } else {
                    alert("Failed to delete restaurant.");
                }
            })
            .catch(error => {
                console.error("Error:", error);
                alert("An error occurred while deleting the restaurant.");
            });
        }
    }

    document.addEventListener("DOMContentLoaded", function () {
        const alertBox = document.querySelector(".alert");
        if (alertBox) {
            setTimeout(() => {
                alertBox.classList.remove('show');
                alertBox.classList.add('fade');
            }, 3000); // hide alert after 3 seconds
        }
    });
</script>
}