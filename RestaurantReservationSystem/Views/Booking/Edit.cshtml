@model RestaurantReservationSystem.ViewModels.BookingViewModel

@{
    ViewData["Title"] = "Edit Reservation";
}

<link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap" rel="stylesheet">
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
<script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>

<div class="d-flex justify-content-center align-items-center vh-100 bg-light">
    <!-- Card Form -->
    <div class="card shadow-lg border-0 p-4" style="max-width: 720px; width: 100%; border-radius: 12px;">
        <div class="card-body p-5">
            <!-- Restaurant Details -->
            <div class="card-header bg-white border-0 text-center pb-3">
                <h2 class="text-dark mb-0">Update Your Reservation</h2>
                <p class="text-muted small mt-2">@ViewBag.RestaurantName</p>
                <p class="text-muted mb-1"><i class="bi bi-envelope"></i> @ViewBag.RestaurantEmail</p>
                <p class="text-muted"><i class="bi bi-telephone"></i> @ViewBag.RestaurantPhone</p>
            </div>

            <!-- Form -->
            <form asp-action="Edit" asp-controller="Booking" method="post">
                @Html.AntiForgeryToken()
                <input type="hidden" asp-for="BookingId" />
                <input type="hidden" asp-for="RestaurantId" />

                <div class="row g-4">
                    <!-- First Name -->
                    <div class="col-md-6">
                        <div class="form-floating">
                            <input asp-for="FirstName" class="form-control" id="FirstName" placeholder="First Name"
                                readonly />
                            <label for="FirstName">First Name</label>
                            <span asp-validation-for="FirstName" class="text-danger small"></span>
                        </div>
                    </div>

                    <!-- Last Name -->
                    <div class="col-md-6">
                        <div class="form-floating">
                            <input asp-for="LastName" class="form-control" id="LastName" placeholder="Last Name"
                                readonly />
                            <label for="LastName">Last Name</label>
                            <span asp-validation-for="LastName" class="text-danger small"></span>
                        </div>
                    </div>

                    <!-- Phone Number -->
                    <div class="col-md-6">
                        <div class="form-floating">
                            <input asp-for="PhoneNumber" class="form-control" id="PhoneNumber"
                                placeholder="Phone Number" readonly />
                            <label for="PhoneNumber">Phone Number</label>
                            <span asp-validation-for="PhoneNumber" class="text-danger small"></span>
                        </div>
                    </div>

                    <!-- Email -->
                    <div class="col-md-6">
                        <div class="form-floating">
                            <input asp-for="Email" class="form-control" id="Email" placeholder="Email" readonly />
                            <label for="Email">Email</label>
                            <span asp-validation-for="Email" class="text-danger small"></span>
                        </div>
                    </div>

                    <!-- Guests -->
                    <div class="col-md-6">
                        <div class="form-floating">
                            <input asp-for="Guests" type="number" class="form-control" id="Guests"
                                placeholder="Number of Guests" min="1" max="20" required />
                            <label for="Guests">Number of Guests</label>
                            <span asp-validation-for="Guests" class="text-danger small"></span>
                        </div>
                    </div>

                    <!-- Reservation Date -->
                    <div class="col-md-6">
                        <div class="form-floating">
                            <input asp-for="ReservationDate" id="ReservationDate" class="form-control flatpickr"
                                placeholder="Reservation Date" required />
                            <label for="ReservationDate">Reservation Date</label>
                            <span asp-validation-for="ReservationDate" class="text-danger small"></span>
                        </div>
                    </div>

                    <!-- Reservation Time -->
                    <div class="col-md-6">
                        <div class="form-floating">
                            <select asp-for="ReservationTime" id="ReservationTime" class="form-control" required>
                                <option value="@Model.ReservationTime" selected>@Model.ReservationTime</option>
                            </select>
                            <label for="ReservationTime">Reservation Time</label>
                            <span asp-validation-for="ReservationTime" class="text-danger small"></span>
                        </div>
                    </div>

                    <!-- Reservation Status -->
                    <div class="col-md-6">
                        <div class="form-floating">
                            <select asp-for="Status" id="ReservationStatus" class="form-control" required>
                                <option value="1">Confirmed</option>
                                <option value="0">Canceled</option>
                            </select>
                            <label for="ReservationStatus">Reservation Status</label>
                            <span asp-validation-for="Status" class="text-danger small"></span>
                        </div>
                    </div>
                </div>

                <!-- Action Buttons -->
                <div class="d-flex justify-content-between align-items-center mt-4">
                    <a asp-controller="Booking" asp-action="Return" class="btn btn-outline-secondary">Return</a>
                    <div class="d-flex gap-2">
                        <button type="submit" class="btn btn-primary" id="saveChangesBtn">Save Changes</button>
                        <button type="button" id="deleteBtn" class="btn btn-danger" style="display: none;"
                            onclick="confirmDelete(@Model.BookingId)">
                            Delete
                        </button>
                    </div>
                </div>

                <!-- Alert Messages -->
                <div id="pastDateAlert" class="alert alert-warning d-flex align-items-center mt-3"
                    style="display: none; border: 1px solid #ffc107; background-color: #fff8e1; color: #856404; border-radius: 8px; padding: 12px; box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);">
                    <i class="bi bi-exclamation-triangle-fill me-2" style="font-size: 1.5rem; color: #ffc107;"></i>
                    <div>This reservation is in the past or is canceled. You can only delete it.</div>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
    flatpickr("#ReservationDate", {
        minDate: "today",
        dateFormat: "Y-m-d",
        onChange: function (selectedDates) {
            updateTimeSlots(selectedDates[0]);  // Update available times based on the selected date
            checkReservationDateAndStatus(selectedDates[0]);  // Check and update button visibility
        }
    });

    // Function to populate available time slots based on the selected date
    function updateTimeSlots(selectedDate) {
        const timeSelect = document.getElementById("ReservationTime");
        timeSelect.innerHTML = '';  // Clear previous options

        const currentTime = new Date();
        const selectedDay = new Date(selectedDate);
        const isToday = currentTime.toDateString() === selectedDay.toDateString();
        const startTime = new Date(selectedDay.setHours(10, 0, 0));  // Start at 10:00 AM
        const endTime = new Date(selectedDay.setHours(20, 0, 0));   // End at 8:00 PM

        // Loop through the available times
        for (let time = startTime; time <= endTime; time.setHours(time.getHours() + 1)) {
            const option = document.createElement("option");
            const formattedTime = time.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });

            option.text = formattedTime;
            option.value = formattedTime;  // Set value to the formatted time

            // Disable past times if the selected date is today
            option.disabled = isToday && time < currentTime;

            timeSelect.appendChild(option);
        }

        // Enable the time dropdown after a date is selected
        timeSelect.disabled = false;
    }

    // Initialize the page with the current reservation time already populated
    window.addEventListener('DOMContentLoaded', function () {
        const initialReservationTime = document.getElementById("ReservationTime").value;
        if (initialReservationTime) {
            // If there's already a reservation time, just show it in the dropdown
            const timeSelect = document.getElementById("ReservationTime");
            timeSelect.disabled = false;  // Ensure the dropdown is not disabled
        }
    });

    // New function to check reservation date and status, and update button states
    function checkReservationDateAndStatus(reservationDate, status) {
        const deleteBtn = document.getElementById("deleteBtn");
        const saveChangesBtn = document.getElementById("saveChangesBtn");
        const pastDateAlert = document.getElementById("pastDateAlert");

        if (!reservationDate) {
            console.warn("ReservationDate is empty or invalid.");
            return;
        }

        const currentDate = new Date();
        currentDate.setHours(0, 0, 0, 0);

        const selectedDate = new Date(reservationDate + "T00:00:00");
        selectedDate.setHours(0, 0, 0, 0);

        // Combine the condition for date check and status check
        if (selectedDate < currentDate || status === 0) {  // Assuming 1 is for Cancel status
            deleteBtn.style.display = "inline-block";  // Show Delete button
            saveChangesBtn.style.display = "none";     // Hide Save Changes button
            pastDateAlert.style.display = "block";     // Show alert
            pastDateAlert.style.visibility = "visible";
        } else {
            deleteBtn.style.display = "none";           // Hide Delete button
            saveChangesBtn.style.display = "inline-block";  // Show Save Changes button
            pastDateAlert.style.display = "none";       // Hide alert
            pastDateAlert.style.visibility = "hidden";
        }
    }

    document.addEventListener("DOMContentLoaded", function () {
        const reservationInput = document.getElementById("ReservationDate").value;
        const reservationStatus = parseInt(document.getElementById("ReservationStatus").value, 10);

        if (reservationInput) {
            // Convert reservationInput (string) into a Date object
            const reservationDate = new Date(reservationInput);

            // Pass the Date object and status to the checkReservationDateAndStatus function
            checkReservationDateAndStatus(reservationDate, reservationStatus);
        }
    });
</script>

<style>
    body {
        font-family: 'Poppins', sans-serif;
        background-color: #f5f5f5;
        color: #333;
    }

    .card {
        border-radius: 12px;
        box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);
    }

    .form-floating label {
        font-size: 0.85rem;
        color: #6c757d;
    }

    .form-floating input,
    .form-floating select {
        border-radius: 8px;
        font-size: 0.95rem;
    }

    .btn {
        transition: all 0.2s ease;
    }

    .btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
    }

    .btn-primary {
        background-color: #007bff;
        border-color: #007bff;
    }

    .btn-primary:hover {
        background-color: #0056b3;
        border-color: #004085;
    }
</style>
